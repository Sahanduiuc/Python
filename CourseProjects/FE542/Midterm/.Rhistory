x=rnorm(1000)
hist(x,freq=FALSE,ylim=c(0,0.4))
lines(seq(-4,4,by=0.001),dnorm(seq(-4,4,by=0.001)),col="red")
x=rnorm(1000,mean=16,sd=2)
hist(x,freq=FALSE)
mu=mean(x)
stddev=sd(x)
lines(seq(mu-4*stddev,mu+4*stddev,by=0.001),dnorm(seq(mu-4*stddev,mu+4*stddev,by=0.001),mean=mu,sd=stddev),col="red")
stddev
lines(seq(mu-4*stddev,mu+4*stddev,by=0.001),dnorm(seq(mu-4*stddev,mu+4*stddev,by=0.001),mean=mu,sd=stddev),col="red")
sqqnorm(x)
y=rt(1000,df=3)
qqnorm(y)
qqnorm(x)
qqnorm(y)
eee=rexp(1000,1)
qqnorm(eee)
zzz=rt(100, df=3)
qqplot(y,zzz)
source("http://www.rmetrics.org/Rmetrics.R")    ## this connects to the file and reads the R code there
install.Rmetrics()                              ## THis is a wrapper for the packages needed
source("http://www.rmetrics.org/Rmetrics.R")    ## this connects to the file and reads the R code there
install.Rmetrics()                              ## THis is a wrapper for the packages needed
## the package FinTS contains functions specifically designed for the book by Dr. Spencer Graves. You can install it using the menu then load using:
install.packages("FinTS")
library(FinTS)
## the package FinTS contains functions specifically designed for the book by Dr. Spencer Graves. You can install it using the menu then load using:
install.packages("FinTS")
# The package quantmodmakes really nice graphs
install.packages("quantmod")
library(quantmod)
sp500daily=read.csv("GSPCdailyJan182018.csv",header=T)        ## these is a file I downloaded from yahoo finance
?normalTest
?normalTest
## Normality tests
## Check documentation on  normalTest
?normalTest
install.packages("FinTS", repos="http://R-Forge.R-project.org")
?normalTest
?normalTest
library(fBasics) ## This loads the package fBasic
install.packages('fBasics')
?normalTest
library(fBasic)
library(fBasics)
install.packages('fBasics')
library(fBasics)
install.packages("fBasics")
library(fBasics)
#sarima_model <- arima(log_returns,order=c(1,0,1),seasonal=list(order=c(0,1,0),period=252))
sarima_model <- arima(log_returns,order=c(0,0,0),seasonal=list(order=c(0,1,0),period=252))
getwd()
setwd("~/Codes/Python/CourseProjects/FE542/Midterm/")
getwd()
df <- read.csv("CRSP_on_SP500_20y.csv")
head(df)
summary(df)
log_returns <- diff(log(df$totval),lag=1)
#sarima_model <- arima(log_returns,order=c(1,0,1),seasonal=list(order=c(0,1,0),period=252))
sarima_model <- arima(log_returns,order=c(0,0,0),seasonal=list(order=c(0,1,0),period=252))
sarima_model$aic
sarima_model$aic
sarima_model <- arima(log_returns,order=c(1,0,0),seasonal=list(order=c(0,1,0),period=252))
sarima_model$aic
criteria.matrix[1,1]
criteria.matrix = matrix(0,nrow=4,ncol=4)
criteria.matrix[1,1]
#for(i in 0:2){
#    for(j in 0:2){
#        sarima_model <- arima(log_returns,order=c(i,0,j),seasonal=list(order=c(0,1,0),period=252))
#        criteria.matrix[i+1,j+1] <- sarima_model$aic
#    }
#}
criteria.matrix
setwd("~/Codes/Python/CourseProjects/FE542/Midterm/")
getwd()
df <- read.csv("CRSP_on_SP500_20y.csv")
head(df)
summary(df)
log_returns <- diff(log(df$totval),lag=1)
criteria.matrix = matrix(0,nrow=4,ncol=4)
for(i in 0:2){
for(j in 0:2){
sarima_model <- arima(log_returns,order=c(i,0,j),seasonal=list(order=c(0,1,0),period=252))
criteria.matrix[i+1,j+1] <- sarima_model$aic
}
}
